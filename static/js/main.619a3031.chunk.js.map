{"version":3,"sources":["Styles/Login.module.css","Styles/Nav.module.css","Styles/CardDetail.module.css","Styles/Card.module.css","Styles/FormSearch.module.css","Styles/Paginator.module.css","Styles/Meter.module.css","Styles/Cards.module.css","Styles/Loading.module.css","Styles/Home.module.css","Styles/Register.module.css","Styles/Create.module.css","Styles/Favorites.module.css","Styles/Pokemones.module.css","Styles/Form.module.css","Redux/Variables.js","Redux/Reducer/Users.js","Redux/Reducer/Pokemones.js","Redux/Reducer/Types.js","Redux/Reducer/index.js","Redux/Store.js","reportWebVitals.js","Redux/Actions/Users.js","Redux/Actions/Pokemones.js","Redux/Actions/index.js","Redux/Actions/Types.js","Components/Meter/Meter.jsx","Components/CardDetail/CardDetail.jsx","Images/Logo.jpg","Components/Nav/Nav.jsx","Components/Forms/Form/Form.jsx","Components/Forms/FormRegister/FormRegister.jsx","Components/Forms/FormLogin/FormLogin.jsx","Pages/Create/Create.jsx","Components/Paginator/Paginator.js","Components/Card/Card.jsx","Redux/Filters/index.js","Images/noHaypokImg.gif","Components/Cards/Cards.jsx","Components/Forms/FormSearch/FormSearch.jsx","Images/loadingImg.gif","Components/Loading/Loading.jsx","Pages/Favorites/Favorites.jsx","Images/Boton.gif","Pages/Home/Home.jsx","Pages/Pokemones/Pokemones.jsx","Routes/Routes.js","index.js"],"names":["module","exports","URL_POKEMONES","POST_REGISTER","POST_LOGIN","GET_POKES_USER","OUTH_LOGIN","POST_POKEMON","GET_ALL_POKEMONES","GET_POKEMONES_BD","GET_POKEMON_ID","GET_POKEMON_NAME","GET_ALL_TYPES","BY_ORDER","BY_TYPE","LOADING","Users","register","state","action","type","payload","loading","login","userLogin","outhLogin","getPokesUser","pokeFavorites","Pokemon","getAllPokemones","allPokemones","getPokemonesBd","getPokemonId","pokemonDetail","getPokemonName","byType","byOrder","order","posPokemon","response","Types","getAllTypes","allTypes","initialState","reducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","user","dispatch","formData","FormData","append","username","name","second_name","last_name","second_last_name","phone","email","image","password","axios","url","method","data","respose","alert","catch","err","console","error","post","orden","id","get","dato","log","respuesta","parameter","newPokemon","vida","fuerza","defensa","velocidad","altura","peso","tipos","user_id","actions","Meter","clasContainer","valor","nombre","styles","container1","container2","container","className","min","max","value","low","high","optimum","CardDetail","useDispatch","pokemonId","useSelector","useParams","useEffect","useState","existe","setExiste","map","e","CardCentro","Ima","src","alt","Img","Lec","title","types","attack","defense","height","special_attack","special_defense","speed","weight","to","CardCentroButton","Nav","navigate","useNavigate","enlaces","path","ContainerLogo","logo","Logo","Ul","en","navData","isActive","active","Li","Dat1","Dat","DatLab","Dat3","onClick","preventDefault","Forms","errors","setErrors","newPoke","setNewPoke","handleInputs","target","test","validateErrors","handleSelect","login_container","Form","onSubmit","Titulo","Errores","Normal","Label","InputName","onChange","required","placeholder","Inputs","Numero","Selec","Selec1","Button","ButtonClose","FormRegister","newUser","setNewUser","FormLogin","setUserLogin","Create","pathname","useLocation","Paginator","currentPage","totalPokes","pokemonPerPage","handlePaged","pageNumbers","i","Math","ceil","push","ContenedorButton","anteriorButton","num","numero","length","siguienteButton","Card","pokesToShow","pok","containerLec","CardButton","Filters","pokemones","filter","p","includes","ordenados","sort","forEach","reverse","a","b","indexOf","Cards","pokemons","setCurrentPage","pokemonPage","slice","containerImg","imagen","containerImg2","Number","FormSearch","nameSearch","setNameSearch","aux","Array","prototype","apply","item","index","Buscar","Buscar1","Select","t","Loading","loadin_container","loadingImg","Favorites","Home","containerLogo","Pokemones","Rout","Fragment","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.619a3031.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"Login_login_container__8eE2X\",\"container\":\"Login_container__145qN\",\"Titulo\":\"Login_Titulo__wE0AM\",\"Form\":\"Login_Form__1C1cI\",\"Label\":\"Login_Label__2My94\",\"Normal\":\"Login_Normal__3S-EB\",\"InputName\":\"Login_InputName__1CF-5\",\"Inputs\":\"Login_Inputs__3Vpe-\",\"Errores\":\"Login_Errores__A-8At\",\"Selec\":\"Login_Selec__2jYiU\",\"Selec1\":\"Login_Selec1__jtDl-\",\"ContBotones\":\"Login_ContBotones__yNqfG\",\"Button\":\"Login_Button__2si-o\",\"ButtonClose\":\"Login_ButtonClose__3a5M4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Nav_container___v42X\",\"Nav\":\"Nav_Nav__1mBSI\",\"Ul\":\"Nav_Ul__2dgeu\",\"Li\":\"Nav_Li__1UemI\",\"ContainerLogo\":\"Nav_ContainerLogo__2H650\",\"Logo\":\"Nav_Logo__1Su4o\",\"active\":\"Nav_active__YDSj0\",\"Dat1\":\"Nav_Dat1__CIKgB\",\"Dat\":\"Nav_Dat__2Gcz-\",\"DatLab\":\"Nav_DatLab__3pFTf\",\"DatImg\":\"Nav_DatImg__XQHZM\",\"Dat3\":\"Nav_Dat3__3kx1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardDetail_container__2VpNK\",\"container1\":\"CardDetail_container1__3P0-g\",\"CardCentro\":\"CardDetail_CardCentro__19-_Z\",\"Ima\":\"CardDetail_Ima__2ojnF\",\"Img\":\"CardDetail_Img__3LDfS\",\"Lec\":\"CardDetail_Lec__2cBdP\",\"title\":\"CardDetail_title__3iHRi\",\"CardBoton\":\"CardDetail_CardBoton__3T6j7\",\"Button\":\"CardDetail_Button__-Ngva\",\"CardCentroButton\":\"CardDetail_CardCentroButton__1FZ6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3lNyO\",\"Ima\":\"Card_Ima__3pbut\",\"Img\":\"Card_Img__1Ulp8\",\"Lec\":\"Card_Lec__2T3ks\",\"containerLec\":\"Card_containerLec__3-nHb\",\"CardButton\":\"Card_CardButton__29XT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormSearch_container__RKZW8\",\"Buscar\":\"FormSearch_Buscar__VJAzM\",\"Buscar1\":\"FormSearch_Buscar1__nrbza\",\"Select\":\"FormSearch_Select__3va5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContenedorButton\":\"Paginator_ContenedorButton__2k3Ye\",\"anteriorButton\":\"Paginator_anteriorButton__1p9Lf\",\"numero\":\"Paginator_numero__SINcV\",\"siguienteButton\":\"Paginator_siguienteButton__NPqkE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Meter_container__1DocR\",\"container1\":\"Meter_container1__16Edl\",\"container2\":\"Meter_container2__1lXeo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2OAj2\",\"containerImg\":\"Cards_containerImg__3lKCO\",\"containerImg2\":\"Cards_containerImg2__1-mQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadin_container\":\"Loading_loadin_container__grR-4\",\"container\":\"Loading_container__ZiAwD\",\"containerImg\":\"Loading_containerImg__1XkDO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2bM5n\",\"containerLogo\":\"Home_containerLogo__1Sk-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"Register_login_container__1iRxO\",\"container\":\"Register_container__qO1gr\",\"Titulo\":\"Register_Titulo__352sf\",\"Form\":\"Register_Form__1Sivc\",\"Label\":\"Register_Label__3x0PC\",\"Normal\":\"Register_Normal__1HKUr\",\"InputName\":\"Register_InputName__3iGRU\",\"Inputs\":\"Register_Inputs__2g67U\",\"Errores\":\"Register_Errores__3yGRc\",\"Selec\":\"Register_Selec__Dpvfv\",\"Selec1\":\"Register_Selec1__32eEp\",\"ContBotones\":\"Register_ContBotones__3dWkf\",\"Button\":\"Register_Button__2qZ9Y\",\"ButtonClose\":\"Register_ButtonClose__3tna2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Create_container__20zNB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Favorites_container__HtPG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pokemones_container__2lz4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"Form_login_container__17ipF\",\"container\":\"Form_container__3Lo2k\",\"Titulo\":\"Form_Titulo__2TdWq\",\"Form\":\"Form_Form__39plA\",\"Label\":\"Form_Label__aaB1j\",\"Normal\":\"Form_Normal__2oh2E\",\"InputName\":\"Form_InputName__HVYtU\",\"Inputs\":\"Form_Inputs__3NVCh\",\"Errores\":\"Form_Errores__1o5Lg\",\"Selec\":\"Form_Selec__Dq91N\",\"Selec1\":\"Form_Selec1__2YOq5\",\"ContBotones\":\"Form_ContBotones__3JNA8\",\"Button\":\"Form_Button__3fpQ_\",\"ButtonClose\":\"Form_ButtonClose__3tPFj\"};","\r\n//TODO: URLS API\r\nexport const URL_USERS = 'https://pokemones-pro.herokuapp.com/api/users';\r\nexport const URL_USERS_REGISTER = 'https://pokemones-pro.herokuapp.com/api/users/register';\r\nexport const URL_USER_LOGIN = 'https://pokemones-pro.herokuapp.com/api/users/login';\r\n//* export const URL_USER_POKES = 'https://pokemones-pro.herokuapp.com/api/users/1/poke';\r\nexport const URL_POKEMONES = 'https://pokemones-pro.herokuapp.com/api/pokemones/';\r\nexport const URL_POKEMONES_NAME = 'https://pokemones-pro.herokuapp.com/api/pokemones/name/';\r\nexport const URL_TYPES = 'https://pokemones-pro.herokuapp.com/api/types/';\r\n\r\n\r\n//TODO: CONSTANTES ACCIONES URL USERS \r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const POST_REGISTER = 'POST_REGISTER';\r\nexport const POST_LOGIN = 'POST_LOGIN';\r\nexport const GET_USER_ID = 'GET_USER_ID';\r\nexport const GET_POKES_USER = 'GET_POKES_USER';\r\nexport const OUTH_LOGIN = 'OUTH_LOGIN';\r\n\r\n\r\n//TODO: CONSTANTES ACCIONES URL POKEMONES\r\nexport const POST_POKEMON = 'POST_POKEMON';\r\nexport const GET_ALL_POKEMONES = 'GET_ALL_POKEMONES';\r\nexport const GET_POKEMONES_BD = 'GET_POKEMONES_BD';\r\nexport const GET_POKEMON_ID = 'GET_POKEMON_ID';\r\nexport const GET_POKEMON_NAME = 'GET_POKEMON_NAME';\r\nexport const PATCH_USER = 'PATCH_USER';\r\n\r\n//TODO: CONSTANTES ACCIONES URL TYPES\r\nexport const GET_ALL_TYPES = 'GET_ALL_TYPES';\r\n\r\n\r\n//TODO: CONSTANTES ACCIONES GLOBALES\r\nexport const BY_ORDER = 'BY_ORDER';\r\nexport const BY_TYPE = 'BY_TYPE';\r\nexport const LOADING = 'LOADING';","import {\r\n  GET_POKES_USER,\r\n  OUTH_LOGIN,\r\n  POST_LOGIN,\r\n  POST_REGISTER\r\n} from \"../Variables\";\r\n\r\nconst Users = {\r\n\r\n  register: (state, action)=>{\r\n    \r\n    if (action.type === POST_REGISTER) {      \r\n      return {\r\n        ...state,\r\n        register: action.payload,\r\n        loading: false,\r\n      }\r\n    }\r\n  },\r\n\r\n  login: (state, action) => {\r\n    if (action.type === POST_LOGIN) {      \r\n      return {\r\n        ...state,\r\n        userLogin: action.payload,\r\n        login: true,\r\n        loading:false,\r\n      }\r\n    }\r\n  },\r\n \r\n  outhLogin: (state, action) => {\r\n    if (action.type === OUTH_LOGIN) {      \r\n      return {\r\n        ...state,\r\n        userLogin: [],\r\n        login: false,\r\n        loading:false,\r\n      }\r\n    }\r\n  },\r\n  \r\n  getPokesUser: (state, action) => {\r\n    if (action.type === GET_POKES_USER) {     \r\n      return {\r\n        ...state,\r\n        pokeFavorites:action.payload,\r\n        loading:false,\r\n      }\r\n    }\r\n  },\r\n}\r\n\r\nexport default Users;","import {\r\n    BY_ORDER,\r\n    BY_TYPE,\r\n    GET_ALL_POKEMONES,\r\n    GET_POKEMONES_BD,\r\n    GET_POKEMON_ID,\r\n    GET_POKEMON_NAME,\r\n    POST_POKEMON\r\n} from \"../Variables\";\r\n\r\n\r\nconst Pokemon = {\r\n    \r\n    getAllPokemones: (state, action)=>{        \r\n        if (action.type === GET_ALL_POKEMONES) {            \r\n            return {\r\n                ...state,\r\n                allPokemones: action.payload,\r\n                loading:false,\r\n            }\r\n        }\r\n    },\r\n   \r\n   \r\n    getPokemonesBd: (state, action) => {        \r\n        if (action.type === GET_POKEMONES_BD) {            \r\n            return {\r\n                ...state,\r\n                allPokemones: action.payload,\r\n                loading:false,\r\n            }\r\n        }\r\n    },\r\n   \r\n    getPokemonId: (state, action) => {        \r\n        if (action.type === GET_POKEMON_ID) {            \r\n            return {\r\n                ...state,\r\n                pokemonDetail: action.payload,\r\n                loading:false,\r\n            }\r\n        }\r\n    },\r\n    \r\n    getPokemonName: (state, action) => {        \r\n        if (action.type === GET_POKEMON_NAME) {            \r\n            return {\r\n                ...state,\r\n                allPokemones: action.payload,\r\n                loading:false,\r\n            }\r\n        }\r\n    },\r\n\r\n    byType: (state, action) => {        \r\n        if (action.type === BY_TYPE) {            \r\n            return {\r\n                ...state,\r\n                type: action.payload,\r\n                loading: false,\r\n            }\r\n        }\r\n    },\r\n   \r\n    byOrder: (state, action) => {        \r\n        if (action.type === BY_ORDER) {            \r\n            return {\r\n                ...state,\r\n                order: action.payload,\r\n                loading: false,\r\n            }\r\n        }\r\n    },\r\n   \r\n    posPokemon: (state, action) => {        \r\n        if (action.type === POST_POKEMON) {            \r\n            return {\r\n                ...state,\r\n                response: action.payload,\r\n                loading: false,\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\n\r\nexport default Pokemon;","import { GET_ALL_TYPES } from \"../Variables\";\r\n\r\n\r\nconst Types = {\r\n\r\n    getAllTypes: (state, action) => {\r\n        if (action.type === GET_ALL_TYPES) {\r\n            return {\r\n                ...state,\r\n                allTypes: action.payload,\r\n                loading: false,\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\n\r\nexport default Types;","import {\r\n    BY_ORDER,\r\n    BY_TYPE,\r\n    GET_ALL_POKEMONES,\r\n    GET_ALL_TYPES,\r\n    GET_POKEMONES_BD,\r\n    GET_POKEMON_ID,\r\n    GET_POKEMON_NAME,\r\n    GET_POKES_USER,\r\n    LOADING,\r\n    OUTH_LOGIN,\r\n    POST_LOGIN,\r\n    POST_POKEMON,\r\n    POST_REGISTER\r\n} from \"../Variables\";\r\nimport Users from \"./Users\";\r\nimport Pokemon from \"./Pokemones\";\r\nimport Types from \"./Types\";\r\n\r\nconst initialState = {\r\n\r\n    userLogin: [],\r\n    register: '',\r\n    pokeFavorites:[],\r\n\r\n    allPokemones: [],\r\n    pokemonDetail: [],\r\n    type: '',\r\n    order: '',\r\n    response: '',\r\n\r\n    allTypes: [],\r\n\r\n    login: false,\r\n    loading: false,\r\n};\r\n\r\n\r\nfunction reducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case POST_REGISTER: return Users.register(state, action)\r\n        case POST_LOGIN: return Users.login(state, action)\r\n        case OUTH_LOGIN: return Users.outhLogin(state, action)\r\n        case GET_POKES_USER: return Users.getPokesUser(state, action)\r\n        \r\n        case GET_ALL_POKEMONES: return Pokemon.getAllPokemones(state, action)\r\n        case GET_POKEMONES_BD: return Pokemon.getPokemonesBd(state, action)\r\n        case GET_POKEMON_ID: return Pokemon.getPokemonId(state, action)\r\n        case GET_POKEMON_NAME: return Pokemon.getPokemonName(state, action)\r\n        case BY_TYPE: return Pokemon.byType(state, action)\r\n        case BY_ORDER: return Pokemon.byOrder(state, action)\r\n        case POST_POKEMON: return Pokemon.posPokemon(state, action)\r\n\r\n        case GET_ALL_TYPES: return Types.getAllTypes(state, action)\r\n\r\n        case LOADING: return { ...state, loading: action.payload }\r\n\r\n        default: return state\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default reducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from './Reducer';\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunkMiddleware)\r\n    )\r\n)\r\n\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\nimport { LOADING, URL_USER_LOGIN, POST_REGISTER, POST_LOGIN, URL_USERS_REGISTER, OUTH_LOGIN, URL_USERS, GET_POKES_USER } from '../Variables';\r\n\r\n\r\n\r\nconst Users = {\r\n    // username\r\n    // name\r\n    // second_name\r\n    // last_name\r\n    // second_last_name\r\n    // phone\r\n    // email\r\n    // image\r\n    // password\r\n\r\n    register: (user) => {\r\n        return (dispatch) => {\r\n            dispatch({ type: LOADING, payload: true })\r\n            const formData = new FormData();\r\n            formData.append('username', user.username);\r\n            formData.append('name', user.name);\r\n            formData.append('second_name', user.second_name);\r\n            formData.append('last_name', user.last_name);\r\n            formData.append('second_last_name', user.second_last_name);\r\n            formData.append('phone', user.phone);\r\n            formData.append('email', user.email);\r\n            formData.append('image', user.image);\r\n            formData.append('password', user.password);\r\n            axios({\r\n                url: URL_USERS_REGISTER,\r\n                method: 'POST',\r\n                data: formData\r\n            })\r\n                .then(respose => {\r\n                    alert(respose.data)\r\n                    dispatch({ type: POST_REGISTER, payload: respose.data })\r\n                })\r\n                .catch(err => console.error(err));\r\n        }\r\n    },\r\n\r\n    login: (user) => {\r\n        return (dispatch) => {\r\n            dispatch({ type: LOADING, payload: true })\r\n            axios.post(URL_USER_LOGIN, user)\r\n                .then(response => response.data)\r\n                .then(response => dispatch({ type: POST_LOGIN, payload: response }))\r\n                .catch(err => console.error(err))\r\n        }\r\n    },\r\n\r\n\r\n    outhLogin: (orden) => (dispatch) => dispatch(dispatch({ type: OUTH_LOGIN, payload: orden })),\r\n\r\n    getPokesUser: (id) => {\r\n        return (dispatch) => {\r\n            dispatch(dispatch({ type: LOADING, payload: true }))            \r\n            axios.get(`${URL_USERS}/${id}/poke`)\r\n                .then(response => response.data)\r\n                .then(dato => {\r\n                dispatch({ type:GET_POKES_USER,payload:dato });\r\n                })\r\n                .catch(err => {\r\n                console.log(err);\r\n            })\r\n        }\r\n    },\r\n}\r\n\r\nexport default Users;","import axios from 'axios';\r\nimport { BY_ORDER, BY_TYPE, GET_ALL_POKEMONES, GET_POKEMONES_BD, GET_POKEMON_ID, GET_POKEMON_NAME, LOADING, POST_POKEMON, URL_POKEMONES, URL_POKEMONES_NAME } from \"../Variables\";\r\n\r\n\r\nconst Pokemon = {\r\n\r\n    getAllPokemones: () => {\r\n        return (dispatch) => {\r\n            dispatch({ type: LOADING, payload: true });\r\n            axios.get(URL_POKEMONES)\r\n                .then(respuesta => respuesta.data)\r\n                .then(dato => {\r\n                    dispatch({ type: GET_ALL_POKEMONES, payload: dato });\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    },\r\n\r\n\r\n    getPokemonesBd: (parameter) => {\r\n        return (dispatch) => {\r\n            dispatch({ type: LOADING, payload: true });\r\n            axios.get(`${URL_POKEMONES}?parameter=${parameter}`)\r\n                .then(respuesta => respuesta.data)\r\n                .then(dato => {\r\n                    dispatch({ type: GET_POKEMONES_BD, payload: dato });\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    },\r\n\r\n    getPokemonId: (id) => {\r\n        return (dispatch) => {\r\n            dispatch({ type: LOADING, payload: true });\r\n            axios.get(`${URL_POKEMONES}${id}`)\r\n                .then(respuesta => respuesta.data)\r\n                .then(dato => {\r\n                    dispatch({ type: GET_POKEMON_ID, payload: dato });\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    },\r\n\r\n    getPokemonName: (name) => {\r\n        return (dispatch) => {\r\n            dispatch({ type: LOADING, payload: true });\r\n            axios.get(`${URL_POKEMONES_NAME}?name=${name}`)\r\n                .then(respuesta => respuesta.data)\r\n                .then(dato => {\r\n                    dispatch({ type: GET_POKEMON_NAME, payload: dato });\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    },\r\n\r\n    byType: (type) => (dispatch) => dispatch(dispatch({ type: BY_TYPE, payload: type })),\r\n\r\n    byOrder: (order) => (dispatch) => dispatch(dispatch({ type: BY_ORDER, payload: order })),\r\n\r\n    posPokemon: (newPokemon) => {\r\n        return (dispatch) => {\r\n            dispatch({ type: LOADING, payload: true });\r\n            const formData = new FormData();\r\n            formData.append('name', newPokemon.name);\r\n            formData.append('vida', newPokemon.vida);\r\n            formData.append('fuerza', newPokemon.fuerza);\r\n            formData.append('defensa', newPokemon.defensa);\r\n            formData.append('velocidad', newPokemon.velocidad);\r\n            formData.append('altura', newPokemon.altura);\r\n            formData.append('peso', newPokemon.peso);\r\n            formData.append('image', newPokemon.image);\r\n            formData.append('tipos', newPokemon.tipos);\r\n            formData.append('user_id', newPokemon.user_id);\r\n\r\n            axios({\r\n                url: URL_POKEMONES,\r\n                method: 'POST',\r\n                data: formData\r\n            })\r\n                .then(respose => {\r\n                    alert(respose.data)\r\n                    dispatch({ type: POST_POKEMON, payload: respose })\r\n                })\r\n                .catch(err => console.error(err));\r\n        }\r\n    }\r\n}\r\n\r\nexport default Pokemon;","import Users from './Users'\r\nimport Pokemon from './Pokemones'\r\nimport Types from './Types'\r\n\r\nconst actions = {\r\n\r\n    register:Users.register,\r\n    login: Users.login,\r\n    outhLogin: Users.outhLogin,\r\n    getPokesUser: Users.getPokesUser,\r\n    \r\n    getAllPokemones:Pokemon.getAllPokemones,\r\n    getPokemonesBd: Pokemon.getPokemonesBd,\r\n    getPokemonId: Pokemon.getPokemonId,\r\n    getPokemonName: Pokemon.getPokemonName,\r\n    byType: Pokemon.byType,\r\n    byOrder: Pokemon.byOrder,\r\n    posPokemon: Pokemon.posPokemon,\r\n    \r\n    \r\n    getAllTypes: Types.getAllTypes,\r\n}\r\n\r\n\r\nexport default actions;","import axios from 'axios';\r\nimport { GET_ALL_TYPES, LOADING, URL_TYPES } from '../Variables';\r\n\r\n\r\nconst Types = {\r\n\r\n    getAllTypes: () => {\r\n        return (dispatch) => {\r\n            dispatch({ type: LOADING, payload: true });\r\n            axios.get(URL_TYPES)\r\n                .then(respuesta => respuesta.data)\r\n                .then(dato => {\r\n                    dispatch({ type: GET_ALL_TYPES, payload: dato });\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    },\r\n}\r\n\r\nexport default Types;","import React from 'react'\r\nimport styles from '../../Styles/Meter.module.css'\r\n\r\n\r\nconst Meter = ({valor,nombre}) => {   \r\n    let clasContainer;     \r\n    if (valor < 25) clasContainer = styles.container1\r\n    if (valor > 25 &&valor < 60) clasContainer = styles.container2\r\n    if (valor >= 60) clasContainer = styles.container\r\n\r\n\r\n\r\n    return (\r\n        <div className={clasContainer}>\r\n            <p>\r\n                {nombre} {'=>'}\r\n                <meter\r\n                    min='0'\r\n                    max='120'\r\n                    value={valor}\r\n                    low='25'\r\n                    high='60'\r\n                    optimum='100'\r\n                >\r\n                    at 60/120\r\n                </meter>\r\n                {'=>'} {valor}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Meter\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport actions from '../../Redux/Actions';\r\n\r\nimport styles from '../../Styles/CardDetail.module.css';\r\nimport Meter from '../Meter/Meter';\r\n\r\n\r\nconst CardDetail = () => {\r\n    const dispatch = useDispatch();\r\n    const pokemonId = useSelector(state => state.pokemonDetail)\r\n    const { id } = useParams()\r\n    useEffect(() => {\r\n        dispatch(actions.getPokemonId(id))\r\n    }, [dispatch, id])\r\n    const [existe, setExiste] = useState(false)\r\n    useEffect(() => {\r\n        if (pokemonId.map(e => (\r\n            e.id === id\r\n        ))) setExiste(true)\r\n        else setExiste(false)\r\n    }, [id, pokemonId])\r\n\r\n\r\n    return (\r\n        <div className={styles.container} >\r\n            {existe &&\r\n                pokemonId.map(e => (\r\n                    <div key={e.id} className={styles.container1}>\r\n                        <div className={styles.CardCentro} key={e.id}>\r\n\r\n                            <div className={styles.Ima}>\r\n                                {e.image && <img src={e.image} alt=\"imagen\" className={styles.Img} />}\r\n                            </div>\r\n\r\n                            <div className={styles.Lec} key={e.id}>\r\n\r\n                                <div className={styles.title}>\r\n                                    {e.id && <p>#&nbsp;&nbsp; {e.id}</p>}\r\n                                </div>\r\n                                <div className={styles.title}>\r\n                                    {e.name && <h3>Nombre:  {e.name}</h3>}\r\n                                </div>\r\n                                <div className={styles.title}>\r\n                                </div>\r\n\r\n                                <h3>Tipo: </h3>\r\n                                {\r\n                                    e.types.map(type => (\r\n                                        <p key={type}>{type}</p>\r\n\r\n                                    ))\r\n                                }\r\n                                {e.attack && <Meter valor={e.attack} nombre='Ataque' />}\r\n                                {e.defense && <Meter valor={e.defense} nombre='Defensa' />}\r\n                                {e.height && <Meter valor={e.height} nombre='Altura' />}\r\n                                {e.special_attack && <Meter valor={e.special_attack} nombre='Ataque E.' />}\r\n                                {e.special_defense && <Meter valor={e.special_defense} nombre='Defensa E.' />}\r\n                                {e.speed && <Meter valor={e.speed} nombre='Velocidad' />}\r\n                                {e.weight && <Meter valor={e.weight} nombre='Peso' />}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <Link to='/pokemones'>\r\n                <button className={styles.CardCentroButton}  >Volver</button>\r\n            </Link>\r\n            {!existe &&\r\n                <h1>\r\n                    no\r\n                </h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardDetail;","export default __webpack_public_path__ + \"static/media/Logo.c4dda904.jpg\";","import React from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport actions from '../../Redux/Actions';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport logo from '../../Images/Logo.jpg';\r\nimport styles from '../../Styles/Nav.module.css';\r\n\r\n\r\n\r\nconst Nav = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const user = useSelector(state => state.userLogin)\r\n    const login = useSelector(state => state.login)\r\n    const enlaces = !login ? [\r\n        { id: 1, title: 'Home', path: '/Pokemones-muestra' },\r\n        { id: 2, title: 'Pokemones', path: '/pokemones' },\r\n        { id: 3, title: 'Registrase', path: '/register' },\r\n        { id: 4, title: 'Iniciar Sesion', path: '/login' },\r\n    ] : [\r\n            { id: 1, title: 'Home', path: '/Pokemones-muestra' },\r\n        { id: 2, title: 'Pokemones', path: '/pokemones' },\r\n        { id: 3, title: 'Crear', path: '/crear' },\r\n        { id: 4, title: 'Mi Equipo', path: '/team' },\r\n    ]\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(actions.outhLogin())\r\n        navigate('/Pokemones-muestra')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.container}>\r\n                <div className={styles.ContainerLogo}>\r\n                    <img src={logo} alt=\"Pokemones\" className={styles.Logo} />\r\n                </div>\r\n                <nav className={styles.Nav}>\r\n                    <ul className={styles.Ul}>\r\n                        {\r\n                            enlaces.map(en => (\r\n                                <NavLink to={en.path} key={en.id} className={(navData) => navData.isActive ? styles.active : ''}\r\n                                >\r\n                                    <div>\r\n                                        <li className={styles.Li}> {en.title}</li>\r\n                                    </div>\r\n                                </NavLink>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            {login &&\r\n                <div className={styles.Dat1}>\r\n                    <div className={styles.Dat}>\r\n                        <label className={styles.DatLab}>{user.user.username} </label>                       \r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        name=\"\"\r\n                        value='Cerrar'\r\n                        className={styles.Dat3}\r\n                        onClick={handleSubmit}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Nav\r\n","import React, { useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport actions from '../../../Redux/Actions'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styles from \"../../../Styles/Form.module.css\"\r\n\r\n\r\nconst validateErrors = (newPoke) => {\r\n    let errors = {};\r\n    if (!newPoke.name) errors.name = 'Campo Obligatorio';\r\n    if (/(?=[^0-9])/.test(newPoke.vida)) errors.vida = \"Solo números\";\r\n    if (/(?=[^0-9])/.test(newPoke.fuerza)) errors.fuerza = \"Solo números\";\r\n    if (/(?=[^0-9])/.test(newPoke.defensa)) errors.defensa = \"Solo números\";\r\n    if (/(?=[^0-9])/.test(newPoke.velocidad)) errors.velocidad = \"Solo números\";\r\n    if (/(?=[^0-9])/.test(newPoke.altura)) errors.altura = \"Solo números\";\r\n    if (/(?=[^0-9])/.test(newPoke.peso)) errors.peso = \"Solo números\";\r\n    return errors;\r\n}\r\n\r\n\r\n\r\nconst Forms = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    //const inputFileRef = useRef()\r\n    const types = useSelector(state => state.allTypes)\r\n    const user = useSelector(state => state.userLogin)\r\n    const [errors, setErrors] = useState({});\r\n    const [newPoke, setNewPoke] = useState({\r\n        name: \"\",\r\n        vida: 0,\r\n        fuerza: 0,\r\n        defensa: 0,\r\n        velocidad: 0,\r\n        altura: 0,\r\n        peso: 0,\r\n        image: '',\r\n        tipos: [],\r\n        user_id: user.user.id,\r\n    })\r\n    const handleInputs = (e) => {\r\n        setNewPoke({ ...newPoke, [e.target.name]: e.target.value });\r\n        setErrors(validateErrors({ ...newPoke, [e.target.name]: e.target.value }))\r\n    }\r\n    const handleSelect = (e) => { setNewPoke({ ...newPoke, tipos: [...newPoke.tipos, e.target.value] }) }\r\n    //const handleImage = () => { setNewPoke({ ...newPoke, image: inputFileRef.current.files[0] }) }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(actions.posPokemon(newPoke))\r\n        setNewPoke({\r\n            name: \"\",\r\n            vida: 0,\r\n            fuerza: 0,\r\n            defensa: 0,\r\n            velocidad: 0,\r\n            altura: 0,\r\n            peso: 0,\r\n            image: '',\r\n            tipos: [],\r\n            user_id: ''\r\n        })\r\n        navigate('/pokemones')\r\n    }\r\n\r\n    return (\r\n        <div className={styles.login_container}>\r\n            <div className={styles.container}>\r\n                <form className={styles.Form} onSubmit={handleSubmit}>\r\n                    <div className={styles.Titulo}><h4>Que vuele tu imaginación!</h4></div>\r\n                    <p className={errors.name ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.name ? (<label >{errors.name}</label>) : <label >Dale un nombre</label>}\r\n                            <input\r\n                                type='tex'\r\n                                name='name'\r\n                                value={newPoke.name}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                required\r\n                                placeholder='Ingresa el nombre ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    <p className={errors.vida ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.vida ? (<label >{errors.vida}</label>) : <label >Dale Vida</label>}\r\n                            <input\r\n                                className={styles.Inputs}\r\n                                type=\"number\"\r\n                                name=\"vida\"\r\n                                value={newPoke.vida}\r\n                                onChange={handleInputs}\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    <p className={errors.fuerza ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.fuerza ? (<label >{errors.fuerza}</label>) : <label >Qué fuerza tiene?</label>}\r\n                            <input\r\n                                className={styles.Inputs}\r\n                                type=\"number\"\r\n                                name=\"fuerza\"\r\n                                value={newPoke.fuerza}\r\n                                onChange={handleInputs}\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    <p className={errors.defensa ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.defensa ? (<label >{errors.defensa}</label>) : <label >Qué defensa tiene?</label>}\r\n                            <input\r\n                                className={styles.Inputs}\r\n                                type=\"number\"\r\n                                name=\"defensa\"\r\n                                value={newPoke.defensa}\r\n                                onChange={handleInputs}\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    <p className={errors.velocidad ? styles.Errores : styles.Numero}>\r\n                        <div className={styles.Label}>\r\n                            {errors.velocidad ? (<label >{errors.velocidad}</label>) : <label >Qué velocidad tiene?</label>}\r\n                            <input\r\n                                className={styles.Inputs}\r\n                                type=\"number\"\r\n                                name=\"velocidad\"\r\n                                value={newPoke.velocidad}\r\n                                onChange={handleInputs}\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    <p className={errors.altura ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.altura ? (<label >{errors.altura}</label>) : <label >Qué altura tiene?</label>}\r\n                            <input\r\n                                className={styles.Inputs}\r\n                                type=\"number\"\r\n                                name=\"altura\"\r\n                                value={newPoke.altura}\r\n                                onChange={handleInputs}\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    <p className={errors.peso ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.peso ? (<label >{errors.peso}</label>) : <label >Qué peso tiene?</label>}\r\n                            <input\r\n                                className={styles.Inputs}\r\n                                type=\"number\"\r\n                                name=\"peso\"\r\n                                value={newPoke.peso}\r\n                                onChange={handleInputs}\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                   \r\n                    <div className={styles.Label}>\r\n                        <label >Quá tipo es?</label>\r\n                    </div>\r\n                    <div className={styles.Selec}>\r\n                        {\r\n                            types.map(e => (\r\n                                <div className={styles.Selec1} key={`Div${e.id}`}>\r\n                                    <label key={`Label ${e.id}`}>{e.name} </label>\r\n                                    <input type=\"checkbox\" key={`Checkbox ${e.id}`}\r\n                                        value={e.id}\r\n                                        onChange={handleSelect}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Crear\" className={styles.Button} />\r\n                </form>\r\n                <Link to='/pokemones'>\r\n                    <button className={styles.ButtonClose}  >X</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Forms;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport actions from '../../../Redux/Actions'\r\n\r\n\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styles from \"../../../Styles/Register.module.css\"\r\n\r\n\r\nconst validateErrors = (newUser) => {\r\n\r\n    let errors = {};\r\n\r\n    if (!newUser.username) errors.username = 'Campo obligatorio';\r\n\r\n    if (!newUser.name) errors.name = 'Campo obligatorio';\r\n    else if (/(?=.*[0-9])/.test(newUser.name)) errors.name = 'Solo letras';\r\n    \r\n    if (/(?=.*[0-9])/.test(newUser.second_name)) errors.second_name = 'Solo letras';\r\n    \r\n    if (!newUser.last_name) errors.last_name = 'Campo obligatorio';\r\n    else if (/(?=.*[0-9])/.test(newUser.last_name)) errors.last_name = 'Solo letras';\r\n    \r\n    if (/(?=.*[0-9])/.test(newUser.second_last_name)) errors.second_last_name = 'Solo letras';\r\n    \r\n    if (/(?=[^0-9])/.test(newUser.phone)) errors.phone = \"Solo números\";\r\n    \r\n    if (!newUser.email) errors.email = 'Campo obligatorio';\r\n    \r\n    if (!newUser.password) errors.password = 'Campo obligatorio';\r\n\r\n    return errors;\r\n}\r\n\r\n\r\nconst FormRegister = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    //const inputFileRef = useRef()\r\n\r\n\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const [newUser, setNewUser] = useState({\r\n        username: '',\r\n        name: '',\r\n        second_name: '',\r\n        last_name: '',\r\n        second_last_name: '',\r\n        phone: '',\r\n        email: '',\r\n        image: '',\r\n        password: '',\r\n    })\r\n\r\n\r\n\r\n\r\n    const handleInputs = (e) => {\r\n        setNewUser({ ...newUser, [e.target.name]: e.target.value });\r\n        setErrors(validateErrors({ ...newUser, [e.target.name]: e.target.value }))\r\n    }\r\n\r\n    //const handleImage = () => { setNewUser({ ...newUser, image: inputFileRef.current.files[0] }) }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(actions.register(newUser))\r\n       \r\n\r\n        setNewUser({\r\n            username: '',\r\n            name: '',\r\n            second_name: '',\r\n            last_name: '',\r\n            second_last_name: '',\r\n            phone: '',\r\n            email: '',\r\n            image: '',\r\n            password: '',\r\n        })\r\n\r\n        navigate(-1)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.login_container}>\r\n            <div className={styles.container}>\r\n                <form className={styles.Form} onSubmit={handleSubmit}>\r\n                    <div className={styles.Titulo}><h4>Bienvenido a nuestro equipo!</h4></div>\r\n\r\n                    <p className={errors.username ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.username ? (<label >{errors.username}</label>) : <label >Username</label>}\r\n\r\n                            <input\r\n                                type='tex'\r\n                                name='username'\r\n                                value={newUser.username}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                required\r\n                                placeholder='username ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n\r\n                    <p className={errors.name ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.name ? (<label >{errors.name}</label>) : <label >Nombre &nbsp;&nbsp;</label>}\r\n\r\n                            <input\r\n                                type='tex'\r\n                                name='name'\r\n                                value={newUser.name}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                required\r\n                                placeholder='name ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n\r\n                    <p className={errors.second_name ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.second_name ? (<label >{errors.second_name}</label>) : <label >S. Nombre </label>}\r\n\r\n                            <input\r\n                                type='tex'\r\n                                name='second_name'\r\n                                value={newUser.second_name}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                placeholder='second_name ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n\r\n                    <p className={errors.last_name ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.last_name ? (<label >{errors.last_name}</label>) : <label >Apellido &nbsp;&nbsp;</label>}\r\n\r\n                            <input\r\n                                type='tex'\r\n                                name='last_name'\r\n                                value={newUser.last_name}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                required\r\n                                placeholder='last_name ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n\r\n                    <p className={errors.second_last_name ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.second_last_name ? (<label >{errors.second_last_name}</label>) : <label >S. Apellido </label>}\r\n\r\n                            <input\r\n                                type='tex'\r\n                                name='second_last_name'\r\n                                value={newUser.second_last_name}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                placeholder='second_last_name ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n\r\n                    <p className={errors.phone ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.phone ? (<label >{errors.phone}</label>) : <label >Telefono &nbsp;&nbsp; </label>}\r\n\r\n                            <input\r\n                                type='tex'\r\n                                name='phone'\r\n                                value={newUser.phone}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                placeholder='phone ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n\r\n                    <p className={errors.email ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.email ? (<label >{errors.email}</label>) : <label >Email &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; </label>}\r\n\r\n                            <input\r\n                                type='email'\r\n                                name='email'\r\n                                value={newUser.email}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                placeholder='email ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n\r\n\r\n                    <p className={errors.password ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.password ? (<label >{errors.password}</label>) : <label >Password &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; </label>}\r\n\r\n                            <input\r\n                                type='password'\r\n                                name='password'\r\n                                value={newUser.password}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                placeholder='password ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n\r\n                    <input type=\"submit\" value=\"Registrarse\" className={styles.Button} />\r\n\r\n                </form>\r\n                <Link to='/Pokemones-muestra'>\r\n                    <button className={styles.ButtonClose}  >X</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormRegister\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport actions from '../../../Redux/Actions';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styles from \"../../../Styles/Login.module.css\";\r\n\r\n\r\nconst validateErrors = (userLogin) => {\r\n    let errors = {};\r\n    if (!userLogin.email) errors.email = 'Campo obligatorio';\r\n    if (!userLogin.password) errors.password = 'Campo obligatorio';\r\n    return errors;\r\n}\r\n\r\n\r\nconst FormLogin = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [errors, setErrors] = useState({});\r\n    const [userLogin, setUserLogin] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n    const handleInputs = (e) => {\r\n        setUserLogin({ ...userLogin, [e.target.name]: e.target.value });\r\n        setErrors(validateErrors({ ...userLogin, [e.target.name]: e.target.value }))\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(actions.login(userLogin))\r\n        setUserLogin({\r\n            email: '',\r\n            password: '',\r\n        })\r\n        navigate('/Pokemones-muestra')\r\n    }\r\n\r\n    return (\r\n        <div className={styles.login_container}>\r\n            <div className={styles.container}>\r\n                <form className={styles.Form} onSubmit={handleSubmit}>\r\n                    <div className={styles.Titulo}><h4>Que bueno tenerte de vuelta!</h4></div>\r\n                    <p className={errors.email ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.email ? (<label >{errors.email}</label>) : <label >Email &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; </label>}\r\n                            <input\r\n                                type='email'\r\n                                name='email'\r\n                                value={userLogin.email}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                placeholder='email ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    <p className={errors.password ? styles.Errores : styles.Normal}>\r\n                        <div className={styles.Label}>\r\n                            {errors.password ? (<label >{errors.password}</label>) : <label >Password &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; </label>}\r\n                            <input\r\n                                type='password'\r\n                                name='password'\r\n                                value={userLogin.password}\r\n                                className={styles.InputName}\r\n                                onChange={handleInputs}\r\n                                placeholder='password ...'\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    <input type=\"submit\" value=\"Iniciar Sesion\" className={styles.Button} />\r\n                </form>\r\n                <Link to='/Pokemones-muestra'>\r\n                    <button className={styles.ButtonClose}>X</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormLogin\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router';\r\nimport actions from '../../Redux/Actions';\r\nimport Forms from '../../Components/Forms/Form/Form';\r\nimport styles from '../../Styles/Create.module.css';\r\nimport FormRegister from '../../Components/Forms/FormRegister/FormRegister';\r\nimport FormLogin from '../../Components/Forms/FormLogin/FormLogin';\r\n\r\nconst Create = () => {\r\n    const dispatch = useDispatch()\r\n    const {pathname} = useLocation()\r\n    useEffect(() => {       \r\n        dispatch(actions.getAllTypes())\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {pathname === '/crear' &&\r\n            <Forms/>\r\n            }\r\n            {pathname === '/register' &&\r\n            <FormRegister/>\r\n            }\r\n            {pathname === '/login' &&\r\n            <FormLogin/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create\r\n","import React from 'react';\nimport styles from '../../Styles/Paginator.module.css'\n\nconst Paginator = ({\n    currentPage,\n        totalPokes,\n        pokemonPerPage,\n    handlePaged\n     }) => {\n    const pageNumbers = []    \n    for (let i = 1; i <= Math.ceil(totalPokes / pokemonPerPage); i++) {\n        pageNumbers.push(i)\n    }\n\n    return (\n        <div className={styles.ContenedorButton}>\n        { currentPage > 1 &&\n            <button\n                className={styles.anteriorButton}\n                onClick={handlePaged} id='back'\n            >&larr; Anterior </button>\n        }           \n            {\n                pageNumbers.map(num => (\n                    currentPage === num && <div\n                        className={styles.numero}\n                        id={num} key={`P` + num}>{`P` + num}</div>\n                ))\n            }            \n            {currentPage > pageNumbers.length ? (\"\") : (<button\n                className={styles.siguienteButton}\n                onClick={handlePaged} id='next'\n            > Siguiente &rarr;</button>)} \n        </div>\n    )\n}\n\nexport default Paginator;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from '../../Styles/Card.module.css'\r\n\r\n\r\n\r\n\r\nconst Card = ({ pokesToShow }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                pokesToShow.map(pok => (\r\n                    <div className={styles.container} key={pok.id}>\r\n                        <div className={styles.Ima}>\r\n                            {pok.image && <img src={pok.image} alt=\"imagen\" className={styles.Img} />}\r\n                        </div>\r\n                        <div className={styles.Lec}>\r\n                            <label>Nombre: {pok.name}</label>\r\n                            <div className={styles.containerLec}>\r\n                                <label>Tipo:&nbsp;&nbsp; </label>\r\n                                {pok.types.length === 1 ? (\r\n                                    <label>{pok.types[0]}  </label>\r\n                                ) : pok.types.length === 2 ? (\r\n                                    <div>\r\n                                            <label>{pok.types[0]}  </label>\r\n                                        <label>{pok.types[1]}  </label>\r\n                                    </div>\r\n                                ) : pok.types.length === 3 ? (\r\n                                    <div>\r\n                                        <p>{pok.types[0]}  </p>\r\n                                        <p>{pok.types[1]}  </p>\r\n                                        <p>{pok.types[2]}  </p>\r\n                                    </div>\r\n                                ) : ('')\r\n                                }\r\n                            </div>\r\n                            <Link to={`/pokemon/${pok.id}`}>\r\n                                <button className={styles.CardButton} >Visitar</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","const Filters = {\r\n    type: (type, pokemones) => {\r\n        if (pokemones.length) return pokemones.filter(p => p.types.includes(type));\r\n        return [];\r\n    },\r\n\r\n    order: (order, pokemones) => {       \r\n        let ordenados = [];        \r\n        switch (order) {            \r\n            case \"a-z\":\r\n                let names = pokemones.map(p => p.name).sort()\r\n                names.forEach(name => {\r\n                    pokemones.forEach(p => {\r\n                        if (name === p.name) ordenados.push(p)\r\n                    })\r\n                });\r\n                return ordenados;                \r\n                case \"z-a\":\r\n                    let namesInv = pokemones.map(p => p.name).sort().reverse()\r\n                namesInv.forEach(name => {\r\n                    pokemones.forEach(p => {\r\n                        if (name === p.name) ordenados.push(p)\r\n                    });\r\n                });                \r\n                return ordenados;                \r\n                case \"fuerza+\":\r\n                    let attack = pokemones.map(p => p.attack).sort((a, b) => b - a)\r\n                    attack.forEach(a => {\r\n                        pokemones.forEach(p => {\r\n                            if(p.attack=== a) ordenados.push(p)\r\n                        })\r\n                    })\r\n                    ordenados = ordenados.filter((a,b)=>ordenados.indexOf(a) === b)\r\n                return ordenados;\r\n            case \"fuerza-\":\r\n                let attackInv = pokemones.map(p => p.attack).sort((a, b) => a - b)\r\n                attackInv.forEach(a => {\r\n                    pokemones.forEach(p => {\r\n                        if (p.attack === a) ordenados.push(p)\r\n                    })\r\n                })\r\n                ordenados = ordenados.filter((a, b) => ordenados.indexOf(a) === b)\r\n                return ordenados;\r\n            default:\r\n                return pokemones;\r\n        }\r\n    },\r\n}\r\n\r\nexport default Filters;","export default __webpack_public_path__ + \"static/media/noHaypokImg.6f19053f.gif\";","import React, { useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport Paginator from '../Paginator/Paginator';\r\nimport Card from '../Card/Card';\r\nimport Filters from '../../Redux/Filters';\r\nimport imagen from '../../Images/noHaypokImg.gif';\r\nimport styles from '../../Styles/Cards.module.css';\r\n\r\nconst Cards = ({ pokemons }) => {\r\n    const type = useSelector(state => state.type)\r\n    const order = useSelector(state => state.order)\r\n    let pokemones = pokemons\r\n    if (type) pokemones = Filters.type(type, pokemones)\r\n    if (order) pokemones = Filters.order(order, pokemones)\r\n    //* PAGINACION     \r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [pokemonPage] = useState(12)\r\n    //* funcion para la paginacion\r\n    const handlePaged = (e) => {\r\n        if (e.target.id === 'back') {\r\n            if (currentPage >= 1) {\r\n                if (currentPage !== 1)\r\n                    setCurrentPage(currentPage - 1);\r\n            }\r\n        } else if (e.target.id === 'next') {\r\n            if (pokesToShow.length >= 9)\r\n                setCurrentPage(currentPage + 1);\r\n        } else\r\n            setCurrentPage(Number(e.target.value));\r\n    }\r\n    //* ecuación matemtica para hallar los pokemones que voy a mostrar por pagina\r\n    let pokesToShow = []\r\n    if (pokemones.length) {\r\n        pokesToShow = pokemones.slice(((currentPage - 1) * pokemonPage), (currentPage * pokemonPage))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {pokesToShow.length ?\r\n                (<div className={styles.container}>\r\n                    <Card pokesToShow={pokesToShow} />\r\n                </div>) : (<div className={styles.containerImg}>\r\n                    <div>\r\n                        <p>No hay nada para mostrar</p>\r\n                    </div>\r\n                    <img src={imagen} alt=\"imagen\" className={styles.containerImg2} />\r\n                </div>)\r\n            }\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                totalPokes={pokemones.length}\r\n                pokemonPerPage={pokemonPage}\r\n                handlePaged={handlePaged}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../../Redux/Actions';\r\nimport styles from '../../../Styles/FormSearch.module.css';\r\n\r\nconst FormSearch = () => {\r\n    const dispatch = useDispatch()\r\n    //const types = useSelector(state => state.allTypes)\r\n    const [nameSearch, setNameSearch] = useState('')\r\n    const allPokemones = useSelector(state => state.allPokemones)    \r\n    let aux=[]    \r\n    for (let i = 0; i < allPokemones.length; i++) { Array.prototype.push.apply(aux, allPokemones[i].types) }\r\n    let types = aux.filter((item,index)=>{return aux.indexOf(item) === index})\r\n    const handleNameSearch = (e) => setNameSearch(e.target.value)\r\n    const handleCreated = (e) => dispatch(actions.getPokemonesBd(e.target.value))\r\n    const handleType = e => dispatch(actions.byType(e.target.value))\r\n    const handleByOrder = (e) => dispatch(actions.byOrder(e.target.value))\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(actions.getPokemonName(nameSearch))\r\n        setNameSearch('')\r\n     }\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <input type=\"text\"\r\n                        id=\"name\"\r\n                        className={styles.Buscar}\r\n                        value={nameSearch}\r\n                        onChange={handleNameSearch}\r\n                        placeholder=\"Ingresa un nombre exacto...\"\r\n                    />\r\n                    <input type=\"submit\" value=\"Buscar\" className={styles.Buscar1} />\r\n                </div>\r\n            </form>\r\n                <div >\r\n                    <select id=\"created\" className={styles.Select} onChange={handleCreated}>\r\n                        <option value=\"\" >Filtar por...</option>\r\n                        <option value=\"false\" >La Api</option>\r\n                        <option value=\"true\" >Creados</option>\r\n                    </select>\r\n                </div>\r\n                <div >\r\n                    <select name=\"type\" className={styles.Select} onChange={handleType}>\r\n                        <option value=\"\" >Filtar por tipo</option>\r\n                        {\r\n                            types?.map(t => (\r\n                                <option value={t} key={t}>{t}</option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div >\r\n                <select id=\"ordenar\" className={styles.Select} onChange={handleByOrder}>\r\n                        <option value=\"\" >Ordenar...</option>\r\n                        <option value=\"a-z\" >A {'=>'} Z</option>\r\n                        <option value=\"z-a\" >Z {'=>'} A</option>\r\n                        <option value=\"fuerza+\" >Fuerza + </option>\r\n                        <option value=\"fuerza-\" >Fuerza - </option>\r\n                    </select>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSearch\r\n","export default __webpack_public_path__ + \"static/media/loadingImg.a687be51.gif\";","import React from 'react';\r\n\r\nimport loadingImg from '../../Images/loadingImg.gif';\r\nimport styles from '../../Styles/Loading.module.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className={styles.loadin_container}>\r\n            <div className={styles.container}>\r\n                <div>\r\n                    <p>Picapica Pikachuu... </p>\r\n                </div>\r\n                <img src={loadingImg} alt=\"Loading\" className={styles.containerImg} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport actions from '../../Redux/Actions';\r\nimport Cards from '../../Components/Cards/Cards';\r\nimport FormSearch from '../../Components/Forms/FormSearch/FormSearch';\r\nimport Loading from '../../Components/Loading/Loading';\r\nimport styles from '../../Styles/Favorites.module.css';\r\n\r\n\r\n\r\n\r\n\r\nconst Favorites = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.userLogin)\r\n  const pokeFavorites = useSelector(state => state.pokeFavorites)\r\n  const loading = useSelector(state => state.loading)\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.getPokesUser(user.user.id))\r\n    \r\n  }, [dispatch, user.user.id])\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <FormSearch />      \r\n      {loading && <Loading/>}\r\n      <Cards\r\n        pokemons={pokeFavorites}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Favorites\r\n\r\n","export default __webpack_public_path__ + \"static/media/Boton.b089c295.gif\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../Images/Boton.gif';\r\nimport styles from '../../Styles/Home.module.css';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.containerLogo}>\r\n                <h2>Ingresar</h2>\r\n                    <Link to='/pokemones'>\r\n                        <img src={logo} alt=\"entrar\" />\r\n                    </Link>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from '../../Redux/Actions'\r\nimport Cards from '../../Components/Cards/Cards';\r\nimport FormSearch from '../../Components/Forms/FormSearch/FormSearch';\r\nimport Loading from '../../Components/Loading/Loading'\r\nimport styles from '../../Styles/Pokemones.module.css'\r\n\r\n\r\nconst Pokemones = () => {\r\n    let pokemones = useSelector(state => state.allPokemones)\r\n    const dispatch = useDispatch()\r\n    const loading = useSelector(state => state.loading)\r\n    useEffect(() => {\r\n        dispatch(actions.getAllPokemones())\r\n        dispatch(actions.getAllTypes())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <FormSearch />\r\n            {loading && <Loading />}\r\n            {!loading &&\r\n                <Cards\r\n                    pokemons={pokemones}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemones\r\n","import React from 'react';\r\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\r\nimport CardDetail from '../Components/CardDetail/CardDetail';\r\nimport Nav from '../Components/Nav/Nav';\r\nimport Create from '../Pages/Create/Create';\r\nimport Favorites from '../Pages/Favorites/Favorites';\r\nimport Home from '../Pages/Home/Home';\r\nimport Pokemones from '../Pages/Pokemones/Pokemones';\r\n\r\nconst Rout = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <BrowserRouter>\r\n                <Nav />\r\n                <Routes>\r\n                    <Route path=\"/Pokemones-muestra\" element={<Home />} />\r\n                    <Route path=\"/register\" element={<Create />} />\r\n                    <Route path=\"/login\" element={<Create />} />\r\n                    <Route path=\"/team\" element={<Favorites />} />\r\n                    <Route path=\"/pokemones\" element={<Pokemones />} />\r\n                    <Route path=\"/pokemon/:id\" element={<CardDetail />} />\r\n                    <Route path=\"/pokemon/name\" element={<CardDetail />} />\r\n                    <Route path=\"/crear\" element={<Create />} />\r\n                </Routes>\r\n            </BrowserRouter>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Rout\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from '../src/Redux/Store'\n\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nimport Rout from './Routes/Routes';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>      \n      <Rout />\n    </React.StrictMode>\n </Provider>,\n  document.getElementById('root')\n);\n\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}